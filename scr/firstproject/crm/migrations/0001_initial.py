# Generated by Django 3.2.3 on 2021-09-13 11:05

import crm.models
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_superuser', models.BooleanField()),
                ('is_rent', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cars',
            fields=[
                ('car_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=50)),
                ('cost', models.CharField(max_length=12)),
                ('engine_num', models.CharField(max_length=50, unique=True)),
                ('body_num', models.CharField(max_length=50)),
                ('tech_passport', models.CharField(max_length=12, unique=True)),
                ('car_num', models.CharField(max_length=12, unique=True)),
                ('spare_wheel', models.CharField(default=None, max_length=150)),
                ('battery', models.CharField(default=None, max_length=100)),
                ('wheels_model', models.CharField(default=None, max_length=100)),
                ('status', models.CharField(default='vacant', max_length=20)),
                ('rent_cost', models.CharField(max_length=12)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=crm.models.cars_dir_path)),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('client_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('passport_series', models.CharField(max_length=10, unique=True)),
                ('firstname', models.CharField(max_length=150)),
                ('lastname', models.CharField(max_length=150)),
                ('second_name', models.CharField(max_length=150)),
                ('date_of_birth', models.DateField()),
                ('date_of_issue', models.DateField()),
                ('issued', models.CharField(max_length=250)),
                ('address', models.CharField(max_length=250)),
                ('phone', models.CharField(max_length=20)),
                ('in_black_list', models.BooleanField(default=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=crm.models.clients_dir_path)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Rent',
            fields=[
                ('rent_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='crm.user')),
                ('rent_name', models.CharField(max_length=50, null=True)),
                ('rent_phone_no', models.CharField(max_length=20, null=True)),
                ('document_num', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name': 'Rent',
                'verbose_name_plural': 'Rents',
            },
        ),
        migrations.CreateModel(
            name='SuperUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='crm.user')),
            ],
            options={
                'verbose_name': 'SuperUser',
                'verbose_name_plural': 'SuperUsers',
            },
        ),
        migrations.CreateModel(
            name='RentUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('moved_from', models.BooleanField(default=False)),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.clients')),
                ('rent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.rent')),
            ],
            options={
                'verbose_name': 'RentUser',
                'verbose_name_plural': 'RentUsers',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('status', models.CharField(default='in progress', max_length=30)),
                ('car_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.cars')),
                ('client_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.clients')),
                ('rent_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.rent')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.AddField(
            model_name='cars',
            name='rent_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.rent'),
        ),
        migrations.CreateModel(
            name='BlackList',
            fields=[
                ('client_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='crm.clients')),
                ('description', models.CharField(default='This is bad client', max_length=250)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('rent_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.rent')),
            ],
            options={
                'verbose_name': 'BlackList',
                'verbose_name_plural': 'BlackList',
            },
        ),
    ]
